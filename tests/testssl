#!/bin/sh

key="$1"
cert="$2"
CA="-CAfile $3"
path="$4"
serverinfo="$5"
extra="$6"

ssltest="$4/ssltest -key $key -cert $cert -c_key $key -c_cert $cert"

if openssl x509 -in $cert -text -noout | fgrep 'DSA Public Key' >/dev/null; then
  dsa_cert=YES
else
  dsa_cert=NO
fi

#############################################################################

echo test sslv2/sslv3
$ssltest $extra || exit 1

echo test sslv2/sslv3 with server authentication
$ssltest -server_auth $CA $extra || exit 1

echo test sslv2/sslv3 with client authentication
$ssltest -client_auth $CA $extra || exit 1

echo test sslv2/sslv3 with both client and server authentication
$ssltest -server_auth -client_auth $CA $extra || exit 1

echo test sslv2/sslv3 via BIO pair
$ssltest $extra || exit 1

if [ $dsa_cert = NO ]; then
  echo 'test sslv2/sslv3 w/o (EC)DHE via BIO pair'
  $ssltest -bio_pair -no_dhe -no_ecdhe $extra || exit 1
fi

echo test sslv2/sslv3 with 1024bit DHE via BIO pair
$ssltest -bio_pair -dhe1024dsa -v $extra || exit 1

echo test sslv2/sslv3 with server authentication
$ssltest -bio_pair -server_auth $CA $extra || exit 1

echo test sslv2/sslv3 with client authentication via BIO pair
$ssltest -bio_pair -client_auth $CA $extra || exit 1

echo test sslv2/sslv3 with both client and server authentication via BIO pair
$ssltest -bio_pair -server_auth -client_auth $CA $extra || exit 1

echo test sslv2/sslv3 with both client and server authentication via BIO pair and app verify
$ssltest -bio_pair -server_auth -client_auth -app_verify $CA $extra || exit 1

test_cipher() {
  local cipher=$1
  local protocol=$2
    echo "Testing $cipher"
    $ssltest -cipher $cipher
    if [ $? -ne 0 ] ; then
      echo "Failed $cipher"
      exit 1
    fi
}

echo "Testing ciphersuites"
for protocol in TLSv1.2; do
  echo "Testing ciphersuites for $protocol"
  for cipher in `../apps/openssl ciphers "RSA+$protocol" | tr ':' ' '`; do
    test_cipher $cipher $protocol
   done
  if ../apps/openssl no-dh; then
    echo "skipping RSA+DHE tests"
  else
    for cipher in `../apps/openssl ciphers "EDH+aRSA+$protocol:-EXP" | tr ':' ' '`; do
      test_cipher $cipher $protocol
    done
  fi
  if ../apps/openssl no-ec; then
    echo "skipping RSA+ECDHE tests"
  else
    for cipher in `../apps/openssl ciphers "EECDH+aRSA+$protocol:-EXP" | tr ':' ' '`; do
      test_cipher $cipher $protocol
    done
  fi
 done

#############################################################################

if openssl no-dh; then
  echo skipping anonymous DH tests
else
  echo test tls1 with 1024bit anonymous DH, multiple handshakes
  $ssltest -v -bio_pair -tls1 -cipher ADH -dhe1024dsa -num 10 -f -time $extra || exit 1
fi

#if openssl no-rsa; then
#  echo skipping RSA tests
#else
#  echo 'test tls1 with 1024bit RSA, no (EC)DHE, multiple handshakes'
#  ./ssltest -v -bio_pair -tls1 -cert ../apps/server2.pem -no_dhe -no_ecdhe -num 10 -f -time $extra || exit 1
#
#  if openssl no-dh; then
#    echo skipping RSA+DHE tests
#  else
#    echo test tls1 with 1024bit RSA, 1024bit DHE, multiple handshakes
#    ./ssltest -v -bio_pair -tls1 -cert ../apps/server2.pem -dhe1024dsa -num 10 -f -time $extra || exit 1
#  fi
#fi

#
# DTLS
#

echo test dtlsv1
$ssltest -dtls1 $extra || exit 1

echo test dtlsv1 with server authentication
$ssltest -dtls1 -server_auth $CA $extra || exit 1

echo test dtlsv1 with client authentication
$ssltest -dtls1 -client_auth $CA $extra || exit 1

echo test dtlsv1 with both client and server authentication
$ssltest -dtls1 -server_auth -client_auth $CA $extra || exit 1

echo test dtlsv1.2
$ssltest -dtls12 $extra || exit 1

echo test dtlsv1.2 with server authentication
$ssltest -dtls12 -server_auth $CA $extra || exit 1

echo test dtlsv1.2 with client authentication
$ssltest -dtls12 -client_auth $CA $extra || exit 1

echo test dtlsv1.2 with both client and server authentication
$ssltest -dtls12 -server_auth -client_auth $CA $extra || exit 1

echo "Testing DTLS ciphersuites"
for protocol in TLSv1.2; do
  echo "Testing ciphersuites for $protocol"
  for cipher in `openssl ciphers "RSA+$protocol" | tr ':' '\n' |
    grep -v RC4`; do
    echo "Testing $cipher"
    $ssltest -cipher $cipher -dtls1
    if [ $? -ne 0 ] ; then
      echo "Failed $cipher"
      exit 1
    fi
  done
done

#############################################################################
# Custom Extension tests

echo "test tls1 with custom extensions"
$ssltest -bio_pair -tls1 -custom_ext || exit 1

#############################################################################
# Serverinfo tests

echo "test tls1 with serverinfo"
$ssltest -bio_pair -tls1 -serverinfo_file $serverinfo || exit 1
$ssltest -bio_pair -tls1 -serverinfo_file $serverinfo -serverinfo_sct || exit 1
$ssltest -bio_pair -tls1 -serverinfo_file $serverinfo -serverinfo_tack || exit 1
$ssltest -bio_pair -tls1 -serverinfo_file $serverinfo -serverinfo_sct -serverinfo_tack || exit 1
$ssltest -bio_pair -tls1 -custom_ext -serverinfo_file $serverinfo -serverinfo_sct -serverinfo_tack || exit 1

#
# Next Protocol Negotiation tests
#
echo "Testing NPN..."
$ssltest -bio_pair -tls1 -npn_client || exit 1
$ssltest -bio_pair -tls1 -npn_server || exit 1
$ssltest -bio_pair -tls1 -npn_server_reject || exit 1
$ssltest -bio_pair -tls1 -npn_client -npn_server_reject || exit 1
$ssltest -bio_pair -tls1 -npn_client -npn_server || exit 1
$ssltest -bio_pair -tls1 -npn_client -npn_server -num 2 || exit 1
$ssltest -bio_pair -tls1 -npn_client -npn_server -num 2 -reuse || exit 1

#############################################################################
# SNI tests
echo "Testing SNI..."
$ssltest -bio_pair -sn_client foo || exit 1
$ssltest -bio_pair -sn_server1 foo || exit 1
$ssltest -bio_pair -sn_client foo -sn_server1 foo -sn_expect1 || exit 1
$ssltest -bio_pair -sn_client foo -sn_server1 bar -sn_expect1 || exit 1
$ssltest -bio_pair -sn_client foo -sn_server1 foo -sn_server2 bar -sn_expect1 || exit 1
$ssltest -bio_pair -sn_client bar -sn_server1 foo -sn_server2 bar -sn_expect2 || exit 1
# Negative test - make sure it doesn't crash, and doesn't switch contexts
$ssltest -bio_pair -sn_client foobar -sn_server1 foo -sn_server2 bar -sn_expect1 || exit 1

#
# ALPN tests
#
echo "Testing ALPN..."
$ssltest -bio_pair -tls1 -alpn_client foo -alpn_server bar || exit 1
$ssltest -bio_pair -tls1 -alpn_client foo -alpn_server foo -alpn_expected foo || exit 1
$ssltest -bio_pair -tls1 -alpn_client foo,bar -alpn_server foo -alpn_expected foo || exit 1
$ssltest -bio_pair -tls1 -alpn_client bar,foo -alpn_server foo -alpn_expected foo || exit 1
$ssltest -bio_pair -tls1 -alpn_client bar,foo -alpn_server foo,bar -alpn_expected foo || exit 1
$ssltest -bio_pair -tls1 -alpn_client bar,foo -alpn_server bar,foo -alpn_expected bar || exit 1
$ssltest -bio_pair -tls1 -alpn_client foo,bar -alpn_server bar,foo -alpn_expected bar || exit 1
$ssltest -bio_pair -tls1 -alpn_client baz -alpn_server bar,foo || exit 1

#############################################################################
# ALPN + SNI
echo "Testing ALPN + SNI..."
$ssltest -bio_pair -alpn_client foo,bar -sn_client alice -alpn_server1 foo,123 -sn_server1 alice -alpn_server2 bar,456 -sn_server2 bob -alpn_expected foo || exit 1
$ssltest -bio_pair -alpn_client foo,bar -sn_client bob -alpn_server1 foo,123 -sn_server1 alice -alpn_server2 bar,456 -sn_server2 bob -alpn_expected bar || exit 1
$ssltest -bio_pair -alpn_client foo,bar -sn_client bob -sn_server1 alice -alpn_server2 bar,456 -sn_server2 bob -alpn_expected bar || exit 1

#############################################################################
# Multi-buffer tests

if [ -z "$extra" -a `uname -m` = "x86_64" ]; then
  $ssltest -cipher AES128-SHA    -bytes 8m     || exit 1
  $ssltest -cipher AES128-SHA256 -bytes 8m     || exit 1
fi
